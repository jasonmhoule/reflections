When would you want to use a remote repository rather than keeping all your work local?

    Publishing a repository with source code for others to see and/or use is one reason to use a site like GitHub.
    Collaborating with others is another use case for a public remote repository.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

    If working with a set of code or a particular branch, you wouldn't want updates to automatically change or conflict with the work you are in the middle of.
    Manual control is maximum control.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

    Use a fork to copy a public repo on GitHub to start working on a separate codebase.
    Use a clone to make a local copy of a public repo, to work on changes locally.
    Use a branch to track a series of commits within any repo. (This helps organize commits that can be pushed and shared publicly.)

What is the benefit of having a copy of the last known state of the remote stored locally?

    One can "take the remote offline" if needed.
    This approach also helps baseline the common ancestor when it comes time to fetch/merge work again.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

    Version control would be much more difficult. It may be easier not to "worry" about managing commits, merges, etc., but for a complex and long-running project, that is a short-term gain with a long-term cost.
